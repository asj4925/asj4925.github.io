(()=>{"use strict";({825:function(){var e=this&&this.__awaiter||function(e,t,n,c){return new(n||(n=Promise))((function(s,i){function o(e){try{l(c.next(e))}catch(e){i(e)}}function a(e){try{l(c.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,a)}l((c=c.apply(e,t||[])).next())}))};(()=>{const t=self;importScripts("Mp3LameEncoder.min.js");let n=null;t.addEventListener("message",(t=>e(void 0,void 0,void 0,(function*(){let e=t.data;if("object"==typeof e&&e.type)if("start"===e.type){n&&(n.cancel(),n=null);const t=e;n=new Mp3LameEncoder(t.msg.sampleRate,t.msg.bitRate)}else if("record"===e.type){if(n){const t=e;n.encode(t.msg)}}else if("end"===e.type){if(n&&t.ports[0]){const e=n.finish();n=null;let c={type:"encoded",msg:e};t.ports[0].postMessage(c)}}else"cancel"===e.type&&n&&(n.cancel(),n=null)}))))})()}})[825]()})();